// 引入sass的math 必须头部引入
@use "sass:math";


// css模块化引入  css模块化引入必须加上分号
@import './reset.scss';

// 声明一个scss变量
// 假定屏幕为37.5，随着设计稿项目要求随意调整
$Basefontsize:37.5;

// 定义scss函数 在任何需要值的地方或sass script中使用
//  编码过程中不想使用rem 想使用px-因为px有宽高概念 ---那势必需要知道元素设定的px值等于多少当前窗口大小下的rem值（比例），这里就是假定
// 为375屏幕的rem 求一个比例。 
// 此表达式指定px和rem的比例关系，得出一个固定比例值，虽然固定的但是因为html.fontsize即rem值 还是动态变化的 所以就会在不同的
// 屏幕宽度-html.fontsize即rem值下去运用这个固定的比例值。
// 这里就是通过一个假定375屏幕情况下得出项目的px和rem的比例关系--得出项目要求的px/rem比例关系的rem比例值在不同情况下应用这个比例值
// 比如元素a宽度为37.5px 经过计算就是1rem---rem动态响应HTML.fontsize---HTML.fontsize动态响应用户屏幕，
// 比如元素b宽度为75px 经过计算就是2rem---rem动态响应HTML.fontsize---HTML.fontsize动态响应用户屏幕，就达到了响应式布局.

@function px2rem($px){
@return math.div($px,$Basefontsize) + rem;
}

// 混入指令 使用include引入该指令
@mixin center(){
    display: flex;
    // 主轴侧轴都设为居中对齐
    justify-content: center;
    align-items: center;
}


@mixin Setfontfamily{
     font-family: 'Oooh Baby', cursive; 
    // font-family: 'Ubuntu Mono', monospace;
}

// :before伪类选择器 可以使用content指定内容，在这里的意义是ico.css使用这个选择器指定图标文本样式，这里也使用覆盖掉 不然样式会被ico.css覆盖
.ico:before{
font-size: px2rem(20);
// color: #333;
margin-bottom: 10px;

}

*{
              // 移动端tap事件单击高亮问题
              -webkit-tap-highlight-color:rgba(0,0,0,0);
              -moz-tap-highlight-color:rgba(0,0,0,0);
              -o-tap-highlight-color:rgba(0,0,0,0)
}

// elementui-sibar组件样式调整,写在组件内不出样式 故而写在加载优先的全局样式文件中
.el-slider__bar{
  background: skyblue;
}
.el-slider__button{
  border:px2rem(1) solid skyblue;
}

// 公共样式区域
// 动态样式 有逻辑的 抽离出一个独立的类名
.showclass {
    /* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影扩散半径 | 阴影颜色 */
    box-shadow: px2rem(0) px2rem(-5) px2rem(3) px2rem(0) rgba(0, 0, 0, 10%);
  }
  .setTheme-title-item-titlecurrent {
    color: #333 !important;
  }
  

  // 过渡动画部分，采用融合的兼容性写法 css3的很多属性都要加上厂商前缀
  
  // title组件
// 组件渲染时-进入时候 的起点位置
 .title-enter,.title-leave-to{
  transform: translate3d(0,-100%,0);
  -ms-transform:translate3d(0,-100%,0);
 }
//  离开起点后的状态和元素最终状态 。但是元素最终状态会被元素本身的样式类覆盖
 .title-enter-to,.title-leave{
  transform: translate3d(0,0,0);
    -ms-transform:translate3d(0,-100%,0);
 }
//  整个过程
 .title-enter-active,.title-leave-active{
  // transition:all .3s ease;
  transition:all 0.3s ease;
  -ms-transition:all 0.3s ease;/*IE*/
 -moz-transition: all 0.3s ease; /* Firefox 4 */
 -webkit-transition:all 0.3s ease; /* Safari 和 Chrome */
 -o-transition: all 0.3s ease; /* Opera */
 }


  // menu组件
 .menu-enter,.menu-leave-to{
  transform: translate3d(0,100%,0);
  }
//  离开起点后的状态和元素最终状态 。但是元素最终状态会被元素本身的样式类覆盖
.menu-enter-to,.menu-leave{
  transform: translate3d(0,0,0);
}
//  整个过程
.menu-enter-active,.menu-leave-active{
 transition:all .3s ease;
//  解决ie edge对于transition的卡顿
-ms-transition:all 0.3s ease;/*IE*/
-moz-transition: all 0.3s ease; /* Firefox 4 */
-webkit-transition:all 0.3s ease; /* Safari 和 Chrome */
-o-transition: all 0.3s ease; /* Opera */

}
.gonow{
  transition:all 0s ease;

}


  // fontfamily组件
 .fontfamily-enter,.fontfamily-leave-to{
  transform: translate3d(0,100%,0);
  opacity: 0.5;
  }
//  离开起点后的状态和元素最终状态 。但是元素最终状态会被元素本身的样式类覆盖
.fontfamily-enter-to,.fontfamily-leave{
  transform: translate3d(0,0,0);
  opacity: 1;
}
//  整个过程
.fontfamily-enter-active,.fontfamily-leave-active{
 transition:all .3s linear;
 -ms-transition:all 0.3s ease;/*IE*/
 -moz-transition: all 0.3s ease; /* Firefox 4 */
 -webkit-transition:all 0.3s ease; /* Safari 和 Chrome */
 -o-transition: all 0.3s ease; /* Opera */

}
 

// capture-wraper元素的过度动画
 // menu组件
 .capture-wraper-enter,.capture-wraper-leave-to{
  transform: translate3d(-100%,0,0);
  }
//  离开起点后的状态和元素最终状态 。但是元素最终状态会被元素本身的样式类覆盖
.capture-wraper-enter-to,.capture-wraper-leave{
  transform: translate3d(0,0,0);
}
//  整个过程
.capture-wraper-enter-active,.capture-wraper-leave-active{
 transition:all .3s linear;
 -ms-transition:all 0.3s ease;/*IE*/
 -moz-transition: all 0.3s ease; /* Firefox 4 */
 -webkit-transition:all 0.3s ease; /* Safari 和 Chrome */
 -o-transition: all 0.3s ease; /* Opera */

}
 
// mask元素的过度动画
 // menu组件
 .fade-enter,.fade-leave-to{
  opacity: 0;
  }
//  离开起点后的状态和元素最终状态 。但是元素最终状态会被元素本身的样式类覆盖
.fade-enter-to,.fade-leave{
  opacity: 1;
}
//  整个过程
.fade-enter-active,.v-leave-active{
 transition:all .3s linear;
 -ms-transition:all 0.3s ease;/*IE*/
 -moz-transition: all 0.3s ease; /* Firefox 4 */
 -webkit-transition:all 0.3s ease; /* Safari 和 Chrome */
 -o-transition: all 0.3s ease; /* Opera */
}
 